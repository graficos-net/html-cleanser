!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self)["html-cleanser"]={})}(this,(function(e){"use strict";const t=["script","img","a","object","iframe","embed","input","textarea","button","link","style","base"],r=/(datasrc="?(.*?)"?)>/gi,i=/(use="?(.*?)"?)>/gi,o=/(src="?(.*?)"?)>/gi,a=/<\/?([a-z0-9]*)\b[^>]*>?/gi,c=new RegExp(`(${[/<!--[\s\S]*?-->/gi,/javascript:\/\*-->/gi,/Set\.constructor`/gi,/<\?xml/gi,/url\s?\(.*?\)/gi,/document\.write/gi].map(({source:e})=>e).join("|")})`,"gi");e.cleanHTML=(e,n="<i><em><span><p>")=>{if(!e)return"";if(t.some(e=>n.includes(`<${e}>`)))throw new Error("Disallowed tags: "+n);n=((n+"").toLowerCase().match(/<[a-z]+>/g)||[]).join("");let s=e;for(s=s.replace(/<$/,"");;){const e=s;if(s=e.replace(c,"").replace(r,(e,t)=>e.replace(t,"")).replace(o,(e,t)=>e.replace(t,"")).replace(i,(e,t)=>e.replace(t,"")).replace(a,(e,t)=>n.includes(`<${t.toLowerCase()}>`)?e:""),e===s)return s}},Object.defineProperty(e,"__esModule",{value:!0})}));